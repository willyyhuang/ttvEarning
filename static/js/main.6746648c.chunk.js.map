{"version":3,"sources":["components/TTVEarningTable/TTVEarningTable.tsx","Layout.tsx","index.tsx"],"names":["TTVEarningTable","rows","useState","rowsPerPage","setRowsPerPage","page","setPage","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","row","sx","border","scope","ranking","channelName","totalEarning","partialEarning","TablePagination","rowsPerPageOptions","count","length","onPageChange","e","newPage","onRowsPerPageChange","parseInt","target","value","displayName","StyledPaper","styled","StyledGrid","Grid","Layout","container","spacing","item","xs","earnings","theme","createTheme","palette","mode","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"wu25BAgBMA,EAAkB,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KACxB,EAAsCC,mBAAiB,KAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAiB,GAAzC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,OACE,qCACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wCAGJ,cAACC,EAAA,EAAD,UACGd,EACEe,MAAMX,EAAOF,EAAaE,EAAOF,EAAcA,GAC/Cc,KAAI,SAACC,GAAD,OACH,eAACN,EAAA,EAAD,CAEEO,GAAI,CAAC,mCAAoC,CAACC,OAAQ,IAFpD,UAGE,cAACP,EAAA,EAAD,CAAWL,UAAU,KAAKa,MAAM,MAAhC,SACGH,EAAII,UAEP,cAACT,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BI,EAAIK,cAC/B,cAACV,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBAA8BI,EAAIM,gBAClC,cAACX,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBAA8BI,EAAIO,oBAP7BP,EAAII,mBAarB,cAACI,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACzCnB,UAAU,MACVoB,MAAO3B,EAAK4B,OACZ1B,YAAaA,EACbE,KAAMA,EACNyB,aAAc,SAACC,EAAGC,GAAJ,OAAgB1B,EAAQ0B,IACtCC,oBAAqB,SAACF,GACpB3B,EAAe8B,SAASH,EAAEI,OAAOC,MAAO,KACxC9B,EAAQ,UAOlBN,EAAgBqC,YAAc,kBACfrC,I,IAAAA,I,QC5DTsC,G,MAAcC,YAAO9B,IAAP8B,CAAH,mFAKXC,EAAaD,YAAOE,IAAPF,CAAH,0DAIVG,EAAS,kBACb,eAACF,EAAD,CAAYG,WAAS,EAACC,QAAS,EAA/B,UACE,cAACJ,EAAD,CAAYK,MAAI,EAACC,GAAI,IACrB,eAACN,EAAD,CAAYK,MAAI,EAACC,GAAI,EAArB,UACE,cAACR,EAAD,yCACA,cAAC,EAAD,CAAiBrC,KAAM8C,OAEzB,cAACP,EAAD,CAAYK,MAAI,EAACC,GAAI,QAIzBJ,EAAOL,YAAc,SACNK,QCtBTM,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,UAIVC,IAASC,OACP,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,cAAC,EAAD,MAGFO,SAASC,eAAe,W","file":"static/js/main.6746648c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Paper,\r\n} from '@mui/material'\r\n\r\ntype TTVEarningTablePropType = {\r\n  rows: any\r\n}\r\n\r\nconst TTVEarningTable = ({rows}: TTVEarningTablePropType) => {\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(200)\r\n  const [page, setPage] = useState<number>(0)\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Ranking</TableCell>\r\n              <TableCell align='center'>Channel name</TableCell>\r\n              <TableCell align='right'>Total earning</TableCell>\r\n              <TableCell align='right'>Earning from Aug 2019</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row: any) => (\r\n                <TableRow\r\n                  key={row.ranking}\r\n                  sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.ranking}\r\n                  </TableCell>\r\n                  <TableCell align='center'>{row.channelName}</TableCell>\r\n                  <TableCell align='right'>{`$${row.totalEarning}`}</TableCell>\r\n                  <TableCell align='right'>{`$${row.partialEarning}`}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25, 50, 100, 200]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={(e, newPage) => setPage(newPage)}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowsPerPage(parseInt(e.target.value, 10))\r\n          setPage(0)\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nTTVEarningTable.displayName = 'TTVEarningTable'\r\nexport default TTVEarningTable\r\n","import React from 'react'\r\nimport {Grid, Paper} from '@mui/material'\r\nimport styled from 'styled-components'\r\nimport {TTVEarningTable} from './components'\r\nimport earnings from './resources/earnigs.json'\r\nimport './Layout.css'\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  padding: 36px 0px 36px 0px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledGrid = styled(Grid)`\r\n  background-color: #212121;\r\n`\r\n\r\nconst Layout = () => (\r\n  <StyledGrid container spacing={2}>\r\n    <StyledGrid item xs={4} />\r\n    <StyledGrid item xs={4}>\r\n      <StyledPaper>Twitch earning leaderboard</StyledPaper>\r\n      <TTVEarningTable rows={earnings} />\r\n    </StyledGrid>\r\n    <StyledGrid item xs={4} />\r\n  </StyledGrid>\r\n)\r\n\r\nLayout.displayName = 'Layout'\r\nexport default Layout\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport Layout from './Layout'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Layout />\n  </ThemeProvider>,\n\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}