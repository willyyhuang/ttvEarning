{"version":3,"sources":["components/TTVEarningTable/TTVEarningTable.tsx","utils/index.ts","Layout.tsx","index.tsx"],"names":["StyledGrid","styled","Grid","TTVEarningTable","rows","useState","rowsPerPage","setRowsPerPage","page","setPage","filter","setFilter","TextField","label","variant","onChange","e","target","value","fullWidth","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","item","channelName","toLowerCase","includes","slice","map","row","sx","border","scope","ranking","input","partialEarning","toString","replace","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","displayName","StyledPaper","Layout","container","spacing","xs","earnings","theme","createTheme","palette","mode","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"+TAoBMA,EAAaC,YAAOC,IAAPD,CAAH,oDAIVE,EAAkB,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KACxB,EAAsCC,mBAAiB,KAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAiB,GAAzC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAiB,IAA7C,mBAAOK,EAAP,KAAeC,EAAf,KAQA,OACE,qCACE,cAACX,EAAD,UACE,cAACY,EAAA,EAAD,CACEC,MAAM,0BACNC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOL,EAAUK,EAAEC,OAAOC,QACpCC,WAAS,MAGb,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,gCAGJ,cAACC,EAAA,EAAD,UACGxB,EACEM,QAAO,SAACmB,GAAD,QAA4BA,EAAKC,YA3B1CC,cAAcC,SAAStB,EAAOqB,kBA4B5BE,MAAMzB,EAAOF,EAAaE,EAAOF,EAAcA,GAC/C4B,KAAI,SAACC,GAAD,OACH,eAACV,EAAA,EAAD,CAEEW,GAAI,CAAC,mCAAoC,CAACC,OAAQ,IAFpD,UAGE,cAACX,EAAA,EAAD,CAAWL,UAAU,KAAKiB,MAAM,MAAhC,SACGH,EAAII,UAEP,cAACb,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BQ,EAAIL,cAC/B,cAACJ,EAAA,EAAD,CAAWC,MAAM,SAAjB,qBClEca,EDmESL,EAAIM,eClE3CD,EAAME,WAAWC,QAAQ,wBAAyB,WD2D7BR,EAAII,SC5DI,IAACC,YD0E1B,cAACI,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACzCxB,UAAU,MACVyB,MAAO1C,EAAK2C,OACZzC,YAAaA,EACbE,KAAMA,EACNwC,aAAc,SAAChC,EAAGiC,GAAJ,OAAgBxC,EAAQwC,IACtCC,oBAAqB,SAAClC,GACpBT,EAAe4C,SAASnC,EAAEC,OAAOC,MAAO,KACxCT,EAAQ,UAOlBN,EAAgBiD,YAAc,kBACfjD,I,IAAAA,I,QEpFTkD,G,OAAcpD,YAAOqB,IAAPrB,CAAH,mFAKXD,EAAaC,YAAOC,IAAPD,CAAH,0DAIVqD,EAAS,kBACb,eAAC,EAAD,CAAYC,WAAS,EAACC,QAAS,EAA/B,UACE,cAAC,EAAD,CAAY3B,MAAI,EAAC4B,GAAI,IACrB,eAAC,EAAD,CAAY5B,MAAI,EAAC4B,GAAI,EAArB,UACE,cAACJ,EAAD,yCACA,cAAC,EAAD,CAAiBjD,KAAMsD,OAEzB,cAAC,EAAD,CAAY7B,MAAI,EAAC4B,GAAI,QAIzBH,EAAOF,YAAc,SACNE,QCtBTK,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,UAIVC,IAASC,OACP,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,cAAC,EAAD,MAGFO,SAASC,eAAe,U","file":"static/js/main.4306619f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n} from '@mui/material'\r\nimport styled from 'styled-components'\r\nimport {numberFormatter} from '../../utils'\r\n\r\ntype TTVEarningTablePropType = {\r\n  rows: any\r\n}\r\n\r\nconst StyledGrid = styled(Grid)`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst TTVEarningTable = ({rows}: TTVEarningTablePropType) => {\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(200)\r\n  const [page, setPage] = useState<number>(0)\r\n  const [filter, setFilter] = useState<string>('')\r\n  const handleFilter = (name: string) => {\r\n    if (name.toLowerCase().includes(filter.toLowerCase())) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledGrid>\r\n        <TextField\r\n          label='Search for channel name'\r\n          variant='standard'\r\n          onChange={(e) => setFilter(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </StyledGrid>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Ranking</TableCell>\r\n              <TableCell align='center'>Channel name</TableCell>\r\n              <TableCell align='center'>Total earning</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .filter((item: any) => handleFilter(item.channelName))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row: any) => (\r\n                <TableRow\r\n                  key={row.ranking}\r\n                  sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.ranking}\r\n                  </TableCell>\r\n                  <TableCell align='center'>{row.channelName}</TableCell>\r\n                  <TableCell align='center'>\r\n                    {`$${numberFormatter(row.partialEarning)}`}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25, 50, 100, 200]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={(e, newPage) => setPage(newPage)}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowsPerPage(parseInt(e.target.value, 10))\r\n          setPage(0)\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nTTVEarningTable.displayName = 'TTVEarningTable'\r\nexport default TTVEarningTable\r\n","export const numberFormatter = (input: number) =>\r\n  input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n","import React from 'react'\r\nimport {Grid, Paper} from '@mui/material'\r\nimport styled from 'styled-components'\r\nimport {TTVEarningTable} from './components'\r\nimport earnings from './resources/earnigs.json'\r\nimport './Layout.css'\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  padding: 36px 0px 36px 0px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledGrid = styled(Grid)`\r\n  background-color: #212121;\r\n`\r\n\r\nconst Layout = () => (\r\n  <StyledGrid container spacing={2}>\r\n    <StyledGrid item xs={4} />\r\n    <StyledGrid item xs={4}>\r\n      <StyledPaper>Twitch earning leaderboard</StyledPaper>\r\n      <TTVEarningTable rows={earnings} />\r\n    </StyledGrid>\r\n    <StyledGrid item xs={4} />\r\n  </StyledGrid>\r\n)\r\n\r\nLayout.displayName = 'Layout'\r\nexport default Layout\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport Layout from './Layout'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Layout />\n  </ThemeProvider>,\n\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}